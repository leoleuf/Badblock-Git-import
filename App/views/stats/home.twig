{% extends 'default.twig' %}
{% set active_page = "stats" %}
{% set show_title = false %}
{% set title = "Statistiques" %}
{% set sub_title = "Sur le serveur" %}
{% block cover %}
    <link rel="stylesheet" type="text/css" href="/dist/css/global.css">

    <div class="cover-back">
        <div class="cover">
            <div class="container">
                <div class="one-half column animated bounceInLeft">
                    <button class="button-games" onclick="location.href='/'" id="tower"><span>Tower</span></button>
                    <button class="button-games" onclick="location.href='/'" id="tower"><span>Tower Run</span></button>
                    <button class="button-games" onclick="location.href='/'" id="rush">Rush</button>
                    <button class="button-games" onclick="location.href='/'" id="survival">Survival</button>
                    <button class="button-games" onclick="location.href='/'" id="survival">SkyWars</button>
                    <button class="button-games" onclick="location.href='/'" id="uhc_speed">UHC Speed</button>
                    <button class="button-games" onclick="location.href='/'" id="peal_wars">Pearl Wars</button>
                    <button class="button-games" onclick="location.href='/'" id="spaceballs">SpaceBalls</button>
                    <button class="button-games" onclick="location.href='/'" id="capture_the_sheep">Capture The Sheep</button>
                    <button class="button-games" onclick="location.href='/'" id="capture_the_sheep">Build Contest</button>
                    <button class="button-games" onclick="location.href='/'" id="pvp_box">Pvp-Box</button>
                </div>
                <div class="one-half column animated bounceInLeft">
                    <div class="search-container">
                        <div class="games-info">
                            <div class="search-container">
                                <form>
                                    <div class="btn-group">
                                        <input class="u-middle-width input-search" id="player_search" type="text" placeholder="Rechercher un Joueur" name="search" onkeypress="searchPlayer()" >
                                        <button class="button-search" type="submit"><!--Recherche--><i class="fas fa-search"></i></button>
                                    </div>
                                    <ul class="search" id="search_down">
                                      <li><a href="#">Aucun résultat</a></li>
                                    </ul>
                                </form>
                            </div>
                        </div>
                    </div>
                    <div class="animated">
                        <a class="button button-primary" href="/play"><i class="icon-play icon"></i> Jouer</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
{% endblock %}
{% block content %}
    <div class="content">
        <div class="twelve columns">
            <div class="stats-home">
                <h4 class="heading heading-bar"><span>Statistiques Générales</span></h4>
                <div class="col-3">
                    <a href="#player-modal"><h3 id="players-count">{{ connected }}</h3>
                        <p>Joueurs connectés</p></a>
                </div>
                <div class="col-3">
                    <a href="#account-modal"><h3>{{ stats['registred'] }}</h3>
                        <p>Joueurs inscrits</p></a>
                </div>
                <div class="col-3">
                    <a href="#ban-modal"><h3>{{ stats['staff'] }}</h3>
                        <p>Membres du staff</p></a>
                </div>
                <div class="col-3">
                    <a href="#player-active-modal"><h3>{{ stats['message_forum'] }}</h3>
                        <p>Messages sur le Forum</p></a>
                </div>
                <div class="col-3">
                    <a href="#followers-modal"><h3>{{ c_ts }}</h3>
                        <p>Joueurs connectés au TeamSpeak</p></a>
                </div>
                <div class="col-3">
                    <a href="#line-modal"><h3>{{ stats['article'] }}</h3>
                        <p>Articles sur le site</p></a>
                </div>
            </div>
        </div>
    </div>
    <div class="content">
        <div class="twelve columns">
            <!--<h4 class="heading heading-bar"><span>Statistiques Guardian</span></h4>-->
            <div class="stats-home">
                <div class="six columns">
                    <div id="container" style="min-width: 310px; height: 400px; max-width: 600px; margin: 0 auto"></div>
                </div>
            </div>
            <div class="stats-home">
                <div class="six columns">
                    <div id="container2" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
                </div>
            </div>
        </div>
    </div>
    <div class="content">
        <div class="twelve columns">
        <br />
            <p class="ita">Le Guardian est un anti cheat développé par xMalware. C'est un robot, détectant une grande panoplie de cheats, il filtre aussi les messages selon une liste de termes interdits. Ceux-ci sont envoyés à tous les modérateurs qui prennent ensuite le relais. Étant donné que c'est un robot, il peut se tromper. Mais il a su acquérir avec son expérience une grande rigueur dans l'art de détecter les petits malins outrepassant le règlement.</p>
        </div>
    </div>
    <div class="stats-home">
        <div class="col-3">
            <a href="#player-modal"><h3 id="players-count">{{ stats['ban'] }}</h3>
                <p>Joueurs suspendus</p></a>
        </div>
        <div class="col-3">
            <a href="#account-modal"><h3>{{ stats['mute'] }}</h3>
                <p>Joueurs baillonés</p></a>
        </div>
        <div class="col-3">
            <a href="#ban-modal"><h3>{{ stats['banGuardian'] }}</h3>
                <p>Joueurs suspendus par le Guardian</p></a>
        </div>
    </div>
{% endblock %}
{% block scripts %}
<!-- Ul recherche des joueurs -->
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/series-label.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>

    <script type="text/javascript">
        document.addEventListener("click", (evt) => {
            const flyoutElement = document.getElementById("player_search");
            let targetElement = evt.target;

            do {
                if (targetElement == flyoutElement) {

                    document.getElementById("search_down").style.display = "block";
                    return;
                }

                targetElement = targetElement.parentNode;
            } while (targetElement);

            document.getElementById("search_down").style.display = "none";
        });
    </script>
    <script>
        function searchPlayer() {

            input = document.getElementById("player_search");
            filter = input.value.toUpperCase();
            ul = document.getElementById("search_down");
            li = ul.getElementsByTagName("li");

            last = "";

            $.ajax({
                url: '/api/stats/search',
                type: "POST",
                data: { search_player : filter},
                success: function(data) {
                    data = JSON.parse(data);
                    $("#search_down").empty();
                    for (i = 0; i < data.length; i++) {
                        if (data[i] != last){
                            $("#search_down").append('<li><a href="/profile/' + data[i]["username"] +'"><img src="https://guiria.badblock.fr/head/' + data[i]["username"] + '/64.png">' + data[i]["username"] + '</a></li>');

                            last = data[i];
                            console.log(data[i]);

                            for (i = 0; i < li.length; i++) {
                                a = li[i].getElementsByTagName("a")[0];
                                if (a.innerHTML.toUpperCase().indexOf(filter) > -1) {
                                    li[i].style.display = "block";
                                } else {
                                    li[i].style.display = "none";

                                }
                            }
                        }
                    }
                }
            });



        }
    </script>


    <script>


        $(function(){
            function playerAj() {
                $.ajax({
                    url: '/api/minecraft/players',
                    success: function(data) {
                        if (data.players.now != null){
                            $("#players-count").text(data.players.now);
                        }
                        setTimeout(playerAj, 3000);
                    }
                });
            };

            playerAj();


            // Document is ready

            $("#player_search").keyup(function()
            {
                $.ajax({
                    type: "POST",
                    url: "/api/stats/search",
                    data: {'search_player' : $( "#player_search" ).val()},
                    dataType: "text",
                    success: function(msg)
                    {
                        //Receiving the result of search here
                    }
                });

            });

        });
    </script>

    <script>

        Highcharts.chart('container', {
            chart: {
                plotBackgroundColor: null,
                plotBorderWidth: null,
                plotShadow: false,
                type: 'pie'
            },
            title: {
                text: 'Nombre de détections en fonction du type de cheat'
            },
            tooltip: {
                pointFormat: '{series.name}: <b>{point.percentage:.1f}%</b>'
            },
            plotOptions: {
                pie: {
                    allowPointSelect: true,
                    cursor: 'pointer',
                    dataLabels: {
                        enabled: true,
                        format: '<b>{point.name}</b>: {point.percentage:.1f} %',
                        style: {
                            color: (Highcharts.theme && Highcharts.theme.contrastTextColor) || 'black'
                        }
                    }
                }
            },
            series: [{
                name: 'Bans',
                colorByPoint: true,
                data: [
                    {% for data,key in guardian %}
                    {
                        name: '{{ key['name'] }}',
                        y: {{ key['number'] }}
                    },
                    {% endfor %}
                ]
            }]
        });
    </script>
    <script>

        Highcharts.chart('container2', {
            chart: {
                type: 'column'
            },
            title: {
                text: 'Évolution des suspensions Guardian sur 30 jours'
            },
            xAxis: {
                categories: [
                    {% for data,key in gstats %}
                        '{{ key['date'] }}',
                    {% endfor %}
                ],
                crosshair: true
            },
            yAxis: {
                min: 0,
                title: {
                    text: 'Bans'
                }
            },
            tooltip: {
                headerFormat: '<span style="font-size:10px">{point.key}</span><table>',
                pointFormat: '<tr><td style="color:{series.color};padding:0">{series.name}: </td>' +
                '<td style="padding:0"><b>{point.y:.1f} bans</b></td></tr>',
                footerFormat: '</table>',
                shared: true,
                useHTML: true
            },
            plotOptions: {
                column: {
                    pointPadding: 0.2,
                    borderWidth: 0
                }
            },
            series: [{
                name: 'Guardian',
                data: [{% for data,key in gstats %} {{ key['number'] }}, {% endfor %}]

            }]
        });
    </script>

{% endblock %}
package fr.xmalware.teamspeakbot;

import com.github.theholywaffle.teamspeak3.TS3Api;
import com.github.theholywaffle.teamspeak3.api.event.ChannelCreateEvent;
import com.github.theholywaffle.teamspeak3.api.event.ChannelDeletedEvent;
import com.github.theholywaffle.teamspeak3.api.event.ChannelDescriptionEditedEvent;
import com.github.theholywaffle.teamspeak3.api.event.ChannelEditedEvent;
import com.github.theholywaffle.teamspeak3.api.event.ChannelMovedEvent;
import com.github.theholywaffle.teamspeak3.api.event.ChannelPasswordChangedEvent;
import com.github.theholywaffle.teamspeak3.api.event.ClientJoinEvent;
import com.github.theholywaffle.teamspeak3.api.event.ClientLeaveEvent;
import com.github.theholywaffle.teamspeak3.api.event.ClientMovedEvent;
import com.github.theholywaffle.teamspeak3.api.event.PrivilegeKeyUsedEvent;
import com.github.theholywaffle.teamspeak3.api.event.ServerEditedEvent;
import com.github.theholywaffle.teamspeak3.api.event.TS3Listener;
import com.github.theholywaffle.teamspeak3.api.event.TextMessageEvent;

import fr.xmalware.teamspeakbot.features.DoubleAuth;
import fr.xmalware.teamspeakbot.features.LinkedRanks;
import fr.xmalware.teamspeakbot.features.MassAccountSecurity;
import fr.xmalware.teamspeakbot.features.ProtectNames;
import fr.xmalware.teamspeakbot.features.VPNBlocker;

public class TeamSpeakListener
{

	public static void load(TS3Api api)
	{
		api.registerAllEvents();
		api.addTS3Listeners(new TS3Listener()
		{

			@Override
			public void onTextMessage(TextMessageEvent e)
			{
				DoubleAuth.onTextMessage(e);
			}

			@Override
			public void onServerEdit(ServerEditedEvent e)
			{
			}

			@Override
			public void onClientMoved(ClientMovedEvent e)
			{
				DoubleAuth.onChannelChange(e);
			}

			@Override
			public void onChannelCreate(ChannelCreateEvent arg0)
			{
				ProtectNames.check(arg0.getChannelId(), arg0.getInvokerId());
			}

			@Override
			public void onChannelDeleted(ChannelDeletedEvent arg0)
			{
			}

			@Override
			public void onChannelDescriptionChanged(ChannelDescriptionEditedEvent arg0)
			{
			}

			@Override
			public void onChannelEdit(ChannelEditedEvent arg0)
			{
				ProtectNames.check(arg0.getChannelId(), arg0.getInvokerId());
			}

			@Override
			public void onChannelMoved(ChannelMovedEvent arg0)
			{
			}

			@Override
			public void onChannelPasswordChanged(ChannelPasswordChangedEvent arg0)
			{
			}

			@Override
			public void onClientJoin(ClientJoinEvent arg0)
			{
				VPNBlocker.check(arg0.getClientId(), arg0.getClientDatabaseId());
				DoubleAuth.onLogin(arg0.getClientId(), arg0.getClientDatabaseId(), arg0.getUniqueClientIdentifier());
				MassAccountSecurity.onLogin(arg0.getClientId(), arg0.getUniqueClientIdentifier());
				LinkedRanks.onLogin(arg0.getClientId(), arg0.getClientDatabaseId(), arg0.getUniqueClientIdentifier());
			}

			@Override
			public void onClientLeave(ClientLeaveEvent arg0)
			{
				DoubleAuth.onDisconnect(arg0.getInvokerUniqueId());
				MassAccountSecurity.onQuit(arg0.getClientId());
			}

			@Override
			public void onPrivilegeKeyUsed(PrivilegeKeyUsedEvent arg0)
			{
			}

		});
	}

}

package fr.xmalware.badblock.bungeecord.badblockbungeeothers.listeners;

import java.util.ArrayList;
import java.util.List;

import fr.xmalware.badblock.bungeecord.badblockbungeeothers.BadBlockBungeeOthers;
import fr.xmalware.badblock.bungeecord.badblockbungeeothers.Player;
import net.md_5.bungee.api.connection.ProxiedPlayer;
import net.md_5.bungee.api.event.LoginEvent;
import net.md_5.bungee.api.event.ServerConnectEvent;
import net.md_5.bungee.api.plugin.Listener;
import net.md_5.bungee.event.EventHandler;
import net.md_5.bungee.event.EventPriority;

public class PreLoginListener implements Listener {

	public static List<String> players = new ArrayList<>();

	@EventHandler (priority = EventPriority.HIGHEST)
	public void onPostLogin(ServerConnectEvent event) {
		ProxiedPlayer proxiedPlayer = event.getPlayer();
		Player.get(proxiedPlayer);
		if (event.getTarget() != null && event.getTarget() != null && event.getTarget().getName().startsWith("hub")) {
			if (!players.contains(event.getPlayer().getName()))
				players.add(event.getPlayer().getName());
		}
		if (players.size() >= 250) {
			BadBlockBungeeOthers.getInstance().setDone(true);
		}
	}
	
	@EventHandler
	public void onLogin(LoginEvent event) {
		if (BadBlockBungeeOthers.getInstance().getDeleteTime() != -1 && BadBlockBungeeOthers.getInstance().getDelete() == -1 && BadBlockBungeeOthers.getInstance().getDeleteTime() < System.currentTimeMillis()) {
			event.setCancelled(true);
			event.setCancelReason("§cInstance indisponible (utilisez l'IP play.badblock.fr) ou patientez une à deux minutes.");
		}
	}

}

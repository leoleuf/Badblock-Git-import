package fr.xmalware.badblock.others.commands;

import java.io.File;
import java.io.IOException;
import java.util.List;

import fr.badblock.ladder.api.Ladder;
import fr.badblock.ladder.api.chat.Motd;
import fr.badblock.ladder.api.commands.Command;
import fr.badblock.ladder.api.config.Configuration;
import fr.badblock.ladder.api.config.ConfigurationProvider;
import fr.badblock.ladder.api.config.YamlConfiguration;
import fr.badblock.ladder.api.entities.BungeeCord;
import fr.badblock.ladder.api.entities.CommandSender;
import fr.badblock.ladder.api.utils.FileUtils;
import fr.xmalware.badblock.api.I18N;
import fr.xmalware.badblock.others.BadBlockOthers;

public class BadBlockOthersReloadCommand extends Command {
	
	public BadBlockOthersReloadCommand() {
		super ("bbothers", "badblock.others");
	}
	
	@Override
	public void executeCommand(CommandSender sender, String[] args) {
		if (args.length == 1 && args[0].equalsIgnoreCase("reload")) {
			BadBlockOthers instance = BadBlockOthers.getInstance();
			instance.reloadConfig();
			File configFile = new File(instance.getDataFolder(), "config.yml");
			try {
				instance.configuration = ConfigurationProvider.getProvider(YamlConfiguration.class).load(configFile);
			} catch (IOException e) {
				e.printStackTrace();
			}
			Configuration configuration = instance.configuration;
			instance.help = configuration.getStringList("help");
			instance.maintenanceEnabled = configuration.getBoolean("maintenance.enabled");
			instance.maintenanceDisconnectWhenServerChanged = configuration.getBoolean("maintenance.disconnectWhenServerChanged");
			instance.maintenanceMotd = instance.readFile(new File("plugins/BadBlockOthers/maintenance.motd"));
			instance.maintenanceConnection = instance.readFile(new File("plugins/BadBlockOthers/connection.motd"));
			if (instance.maintenanceEnabled) {
				Motd motd = (Motd)FileUtils.load(new File("motd.json"), Motd.class);
				motd.setMotd(I18N.getTranslatedMessages("maintenance.motd"));
				List<String> strings = BadBlockOthers.getInstance().configuration.getStringList("lang.maintenance.players");
				String[] str = new String[] {};
				str = strings.toArray(str);
				motd.setPlayers(str);
				motd.setMaxPlayers(BadBlockOthers.getInstance().configuration.getInt("lang.maintenance.maxplayers"));
				motd.setVersion(BadBlockOthers.getInstance().configuration.getString("lang.maintenance.version"));
				Ladder.getInstance().getMotd().setMaxPlayers(motd.getMaxPlayers());
				Ladder.getInstance().getMotd().setMotd(motd.getMotd());
				Ladder.getInstance().getMotd().setPlayers(motd.getPlayers());
				Ladder.getInstance().getMotd().setVersion(motd.getVersion());
				for (BungeeCord bungee : Ladder.getInstance().getServers()) {
					bungee.sendMotd(motd);
				}
			}
			sender.sendMessages(I18N.getTranslatedMessages("config.reloaded"));
		}
	}
	
}

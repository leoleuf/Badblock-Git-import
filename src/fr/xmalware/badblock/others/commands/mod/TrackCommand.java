package fr.xmalware.badblock.others.commands.mod;

import java.util.List;

import fr.badblock.ladder.api.Ladder;
import fr.badblock.ladder.api.chat.RawMessage;
import fr.badblock.ladder.api.chat.RawMessage.ClickEventType;
import fr.badblock.ladder.api.chat.RawMessage.HoverEventType;
import fr.badblock.ladder.api.commands.Command;
import fr.badblock.ladder.api.entities.CommandSender;
import fr.badblock.ladder.api.entities.Player;
import fr.xmalware.badblock.api.I18N;

public class TrackCommand extends Command {
	
	public TrackCommand() {
		super("track", "others.mod.track", "tk");
	}
	
	@Override
	public void executeCommand(CommandSender sender, String[] args) {
		/*
		 *	Commande :
		 *		=> de voir le nom du serveur & proxy où est le joueur
		 *		=> dans le groupe où il est
		 *		=> temps de connexion
		 *		=> grades
		 */
		if (args.length != 1) {
			sender.sendMessages(I18N.getTranslatedMessages("commands.track.usage"));
			return;
		}
		String playerName = args[0];
		Ladder ladder = Ladder.getInstance();
		Player otherPlayer = ladder.getPlayer(playerName);
		if (otherPlayer == null) {
			sender.sendMessages(I18N.getTranslatedMessages("commands.track.disconnectedplayer", playerName));
			return;
		}
		String[] messages = I18N.getTranslatedMessages("commands.track.message", otherPlayer.getName(), otherPlayer.getBungeeServer().getName(), 
				otherPlayer.getBukkitServer().getName());
		new Thread() {
			@Override
			public void run() {
				for (String string : messages) {
					if (string.equals("@3")) {
						if (!(sender instanceof Player)) continue;
						Player player = (Player) sender;
						RawMessage rawMessage = Ladder.getInstance().createRawMessage(I18N.getTranslatedMessage("commands.track.cj", otherPlayer.getName()));
						rawMessage.setHoverEvent(HoverEventType.SHOW_TEXT, false, I18N.getTranslatedMessages("commands.track.hovertojoin", otherPlayer.getName()));
						rawMessage.setClickEvent(ClickEventType.RUN_COMMAND, false, "/connect player:" + otherPlayer.getName());
						rawMessage.send(player);
					}else sender.sendMessage(string);
					try {
						Thread.sleep(100);
					} catch (InterruptedException e) {
						e.printStackTrace();
					}
				}
			}
		}.start();
	}
	
}

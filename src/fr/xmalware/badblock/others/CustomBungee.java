package fr.xmalware.badblock.others;

import java.net.InetSocketAddress;

import fr.badblock.ladder.Proxy;
import fr.badblock.ladder.api.Ladder;
import fr.badblock.ladder.api.chat.ChatColor;
import fr.badblock.ladder.api.entities.BungeeCord;
import fr.badblock.ladder.api.events.all.PlayerJoinEvent;
import fr.badblock.ladder.data.LadderIpDataHandler;
import fr.badblock.ladder.entities.LadderBungee;
import fr.badblock.ladder.entities.LadderPlayer;
import fr.badblock.protocol.packets.Packet;
import fr.badblock.protocol.packets.PacketPlayerData;
import fr.badblock.protocol.packets.PacketPlayerJoin;
import fr.xmalware.badblock.others.commands.mod.punish.CommandBan;

public class CustomBungee extends LadderBungee {

	public CustomBungee(String name, InetSocketAddress address) {
		super(name, address);
	}

	public CustomBungee(BungeeCord bungee) {
		super(bungee.getName(), bungee.getAddress());
	}

	@Override
	public void handle(PacketPlayerJoin packet)
	{
		LadderPlayer player = new LadderPlayer(this, packet);
		PlayerJoinEvent event = new PlayerJoinEvent(player, this);
		if ((Ladder.getInstance().getPlayer(packet.getUniqueId()) != null) || (Ladder.getInstance().getPlayer(packet.getPlayerName()) != null))
		{
			player.disconnect(new String[] { ChatColor.RED + "Vous êtes déjà connecté sur ce serveur." });return;
		}
		Ladder.getInstance().getPluginsManager().dispatchEvent(event);

		player.getPunished().checkEnd();
		player.getIpAsPunished().checkEnd();
		if (player.getPunished().isBan()) {
			player.disconnect(CommandBan.buildBanReason(player.getPunished().getBanEnd(), player.getPunished().getBanReason()));
		} else if (player.getIpData().getAsPunished().isBan()) {
			player.disconnect(CommandBan.buildBanReason(player.getIpAsPunished().getBanEnd(), player.getIpAsPunished().getBanReason()));
		}
		if (event.isCancelled())
		{
			player.disconnect(new String[] { event.getCancelReason() });
		}
		else
		{
			broadcastOthers(packet);
			Proxy.getInstance().playerConnect(player);

			((LadderIpDataHandler)player.getIpData()).getPlayers().add(player.getUniqueId());

			handle(new PacketPlayerData(PacketPlayerData.DataType.PLAYER, PacketPlayerData.DataAction.REQUEST, packet.getPlayerName(), "*"));
			handle(new PacketPlayerData(PacketPlayerData.DataType.IP, PacketPlayerData.DataAction.REQUEST, packet.getAddress().getAddress().getHostAddress(), "*"));
		}
	}

	public void broadcastOthers(Packet packet)
	{
		for (BungeeCord server : Ladder.getInstance().getServers()) {
			if (!server.getName().equalsIgnoreCase(getName())) {
				server.sendPacket(packet);
			}
		}
	}

}

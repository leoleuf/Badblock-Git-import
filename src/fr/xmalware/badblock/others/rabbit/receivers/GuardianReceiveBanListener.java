package fr.xmalware.badblock.others.rabbit.receivers;

import com.google.gson.Gson;

import fr.badblock.ladder.api.Ladder;
import fr.badblock.ladder.api.entities.Player;
import fr.badblock.ladder.api.utils.Punished;
import fr.xmalware.badblock.docker.server.rabbitmq.listeners.abstracts.PacketListener;
import fr.xmalware.badblock.docker.server.rabbitmq.utils.RabbitQueue;
import fr.xmalware.badblock.others.guardian.GuardianKick;

public class GuardianReceiveBanListener extends PacketListener {

	public GuardianReceiveBanListener() {
		super("guardian.ban", false);
	}

	@Override
	public void onPacketReceive(String string) {
		GuardianKick kick = new Gson().fromJson(string, GuardianKick.class);
		Player proxiedPlayer = Ladder.getInstance().getPlayer(kick.getUniqueId());
		if (proxiedPlayer != null) {
			// Add punishment
			punish(proxiedPlayer.getAsPunished(), kick.getReason());
			punish(proxiedPlayer.getIpAsPunished(), kick.getReason());
			proxiedPlayer.savePunishions();
			proxiedPlayer.saveData();
			proxiedPlayer.getIpData().savePunishions();
			proxiedPlayer.getIpData().saveData();
			proxiedPlayer.disconnect(kick.getMessage());
		}
	}
	
	private void punish(Punished punished, String kickReason) {
		punished.setBan(true);
		punished.setBanEnd(System.currentTimeMillis() + (86400_000 * 5L));
		punished.setBanner("Guardian");
		punished.setBanReason(kickReason);
	}

}

package fr.xmalware.badblock.hub.utils;

import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.List;
import java.util.Random;
import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.craftbukkit.v1_8_R3.CraftServer;
import org.bukkit.craftbukkit.v1_8_R3.CraftWorld;
import org.bukkit.craftbukkit.v1_8_R3.entity.CraftPlayer;
import org.bukkit.entity.Player;

import com.mojang.authlib.GameProfile;

import fr.badblock.game.core18R3.players.listeners.GameScoreboard;
import fr.badblock.gameapi.utils.i18n.Locale;
import fr.xmalware.badblock.hub.inventories.join.PlayerCustomInventory;
import net.minecraft.server.v1_8_R3.EntityPlayer;
import net.minecraft.server.v1_8_R3.MinecraftServer;
import net.minecraft.server.v1_8_R3.PacketPlayOutEntityDestroy;
import net.minecraft.server.v1_8_R3.PacketPlayOutNamedEntitySpawn;
import net.minecraft.server.v1_8_R3.PacketPlayOutPlayerInfo;
import net.minecraft.server.v1_8_R3.PacketPlayOutPlayerInfo.EnumPlayerInfoAction;
import net.minecraft.server.v1_8_R3.PlayerConnection;
import net.minecraft.server.v1_8_R3.PlayerInteractManager;
import net.minecraft.server.v1_8_R3.WorldServer;

public class NPC {

	int entityid;
	UUID uuid;
	Location loc;
	public String rank;
	public List<EntityPlayer> npcs = new ArrayList<>();
	public List<Player> shown = new ArrayList<>();

	public NPC(String rank, Location loc) {
		this.loc = loc;
		this.rank = rank;
		double rx = loc.getX();
		double ry = loc.getY();
		double rz = loc.getZ();
		this.loc = new Location(loc.getWorld(), rx, ry, rz, new SecureRandom().nextInt(180 + 180) - 180, new SecureRandom().nextInt(180 + 180) - 180);
	}

	public void show(String name, UUID uuid, Player player) {
		MinecraftServer nmsServer = ((CraftServer) Bukkit.getServer()).getServer();
		WorldServer nmsWorld = ((CraftWorld) Bukkit.getWorlds().get(0)).getHandle();

		if (GameScoreboard.groups.get(rank) != null) {
			GameScoreboard.board.getTeam( GameScoreboard.groups.get(rank) ).addEntry(name);
		}
		EntityPlayer npc = new EntityPlayer(nmsServer, nmsWorld, new GameProfile(uuid, name), new PlayerInteractManager(nmsWorld));
		double doubler = 0;
		if (new SecureRandom().nextInt(5) >= 3) { 
			doubler = new SecureRandom().nextDouble() * 2;
		}
		double rx = loc.getX() + doubler;
		double ry = loc.getY() + 1;
		doubler = 0;
		if (new SecureRandom().nextInt(5) >= 3) { 
			doubler = new SecureRandom().nextDouble() * 2;
		}
		double rz = loc.getZ() + doubler;
		float pitch = new Random().nextInt(18) - 5;
		float yaw = new Random().nextInt(3600) - 180;
		Block block = Bukkit.getWorlds().get(0).getBlockAt((int) rx, (int) ry, (int) rz);
		while (ry > 0 && block.getType().equals(Material.AIR)) {
			ry--;
			block = Bukkit.getWorlds().get(0).getBlockAt((int) rx, (int) ry, (int) rz);
			if (block.getType().name().contains("SLAB") || block.getType().name().contains("STEP") || block.getType().name().contains("STAIR")) {
				ry-=0.5;
			}
		}
		ry++;

		npc.setLocation(rx, ry, rz, yaw, pitch);
		if (new SecureRandom().nextInt(5) >= 2) { 
			PlayerCustomInventory item = PlayerCustomInventory.values()[new SecureRandom().nextInt(PlayerCustomInventory.values().length)];
			npc.getBukkitEntity().setItemInHand(item.getCustomItem().toItemStack(Locale.FRENCH_FRANCE));
		}
		npc.spawnIn(nmsWorld);
		PlayerConnection connection = ((CraftPlayer) player).getHandle().playerConnection;
		connection.sendPacket(new PacketPlayOutPlayerInfo(PacketPlayOutPlayerInfo.EnumPlayerInfoAction.ADD_PLAYER, new EntityPlayer[] { npc }));
		connection.sendPacket(new PacketPlayOutNamedEntitySpawn(npc));
		npcs.add(npc);
	}

	public void despawn() {
		for (Player p : Bukkit.getOnlinePlayers()) {
			final PlayerConnection connection = ((CraftPlayer) p).getHandle().playerConnection;
			for (EntityPlayer npc : npcs) {
				connection.sendPacket(new PacketPlayOutPlayerInfo(EnumPlayerInfoAction.REMOVE_PLAYER, npc));
				connection.sendPacket(new PacketPlayOutEntityDestroy(npc.getId()));
			}
		}
		for (EntityPlayer npc : npcs) {
			npc.die();
		}
	}

	public Integer getEntityId() {
		return Integer.valueOf(this.entityid);
	}

	public Location getLocation() {
		return loc;
	}

}

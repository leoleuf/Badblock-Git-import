package fr.xmalware.badblock.hub.riders;

import java.lang.reflect.Field;

import org.bukkit.entity.Player;

import fr.xmalware.badblock.hub.objects.HubPlayer;
import net.minecraft.server.v1_8_R3.EntityHuman;
import net.minecraft.server.v1_8_R3.EntityLiving;
import net.minecraft.server.v1_8_R3.EntityRabbit;
import net.minecraft.server.v1_8_R3.World;

public class RideableRabbit extends EntityRabbit {

	public RideableRabbit(World world, Player rider) {
		super(world);
		this.rider = rider;
	}

	Player rider = null;

	@Override
	public void g(float sideMot, float forMot) {
		if (MountManager.shouldDie(this, rider))
			return;
		if ((this.passenger != null && this.passenger instanceof EntityHuman) && (rider != null && rider.isOnline())) {
			HubPlayer hubPlayer = HubPlayer.get(rider);
			hubPlayer.lastMount = System.currentTimeMillis() + 1000;
			hubPlayer.mountEntity = this;
			this.S = 1.0F;

	        this.lastYaw = this.yaw = this.passenger.yaw;
	        this.pitch = this.passenger.pitch * 0.5F;
	        this.setYawPitch(this.yaw, this.pitch);
	        this.aI = this.aG = this.yaw;

	        sideMot = ((EntityLiving) this.passenger).aZ * 0.5F;
	        forMot = ((EntityLiving) this.passenger).ba;

	        if (forMot <= 0.0F) {
	            forMot *= 0.25F;
	        }
	        sideMot *= 0.75F;
	        this.k(0.35F); // La vitesse
	        super.g(sideMot, forMot);
	        Field jump = null;
		    try {
				jump = EntityLiving.class.getDeclaredField("aY");
			} catch (NoSuchFieldException | SecurityException e1) {
			}
		    jump.setAccessible(true);
	        if(jump != null && this.passenger != null /* On verifie quelle est au sol a enlever pour les entitï¿½ volante */&& this.onGround){
	        	  try {
	  	            if (jump.getBoolean(this.passenger)) {
	  	                double jumpHeight = 0.5D; // La Taille du jump 
	  	                this.motY = jumpHeight; 
	  	            }
	  	        } catch (IllegalAccessException e) {
	  	            e.printStackTrace();
	  	        }
	        }
		} else {
			this.die();
		}

	}
}
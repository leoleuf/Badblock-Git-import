package fr.xmalware.badblock.hub.commands;

import java.util.Arrays;

import org.bukkit.DyeColor;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;

import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.utils.i18n.Locale;
import fr.badblock.ladder.api.utils.StringUtils;
import fr.xmalware.badblock.hub.BadBlockHub;
import fr.xmalware.badblock.hub.npc.NPCData;
import fr.xmalware.badblock.hub.npc.NPCType;
import fr.xmalware.badblock.hub.objects.HubPlayer;

public class NPCCommand implements CommandExecutor {

	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String arg, String[] args) {
		if (!(sender instanceof Player)) {
			sender.sendMessage(GameAPI.i18n().get(Locale.ENGLISH_US, "hub.admin.playerneeded"));
			//sender.sendMessage("§7[§bAdmin§7] §cVous devez être un joueur pour pouvoir exécuter cette commande.");
			return true;
		}
		Player player = (Player) sender;
		HubPlayer lobbyPlayer = HubPlayer.get(player);
		if (!lobbyPlayer.hasPermission("hub.npc")) {
			sender.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.npc.permission"));
			return true;
		}
		if (args.length >= 1 && args[0].equalsIgnoreCase("list")) {
			boolean contains = false;
			for (NPCData npcData : NPCData.stockage) {
				contains = true;
				sender.sendMessage("§b" + npcData.getDisplayName() + " §7: §b" + Arrays.toString(npcData.getServers()));
			}
			return true;
		}
		if (args.length >= 2 && args[0].equalsIgnoreCase("add")) {
			// Location location, EntityType entityType, String displayName, NPCType npcType,  Material highlightedItem, DyeColor dyeColor, String... servers
			Location location = player.getLocation();
			EntityType entityType = EntityType.fromName(args[1]);
			NPCType npcType = NPCType.fromName(args[2]);
			Material material = Material.getMaterial(args[3]);
			DyeColor dyeColor = null;
			for (DyeColor dyeC : DyeColor.values())
				if (dyeC.name().equalsIgnoreCase(args[4]))
					dyeColor = dyeC;
			String server = args[5];
			String displayName = StringUtils.join(args, " ", 6);
			NPCData npcData = new NPCData(location, entityType, displayName, npcType, material, dyeColor, server);
			NPCData.stockage.add(npcData);
			try {
				GameAPI.getAPI().getSqlDatabase().query("UPDATE keyValues SET value = '" + BadBlockHub.getInstance().getGson().toJson(NPCData.stockage) + "' WHERE key = 'npc'").close();
			} catch (Exception e) {
				e.printStackTrace();
			}
			return true;
		}
		if (args.length >= 1 && args[0].equalsIgnoreCase("bypass")) {
			if (!lobbyPlayer.isAdmin()) {
				lobbyPlayer.setAdmin(true);
				player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.activated"));
				//player.sendMessage("§7[§bAdmin§7] §aActivé.");
				return true;
			}
			lobbyPlayer.setAdmin(false);
			player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.disabled"));
			//player.sendMessage("§7[§bAdmin§7] §cDésactivé.");
			return true;
		}
		player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.help"));
		/*sender.sendMessage("§8§l«§b§l-§8§l»§m------§f§8§l«§b§l-§8§l»§b §b§lAdmin §8§l«§b§l-§8§l»§m------§f§8§l«§b§l-§8§l»");
		sender.sendMessage("§c> §6/admin §bhelp §6: liste des commandes");
		sender.sendMessage("§c> §6/admin §bbypass §6: activer le mode bypass");
		sender.sendMessage("§c> §6/admin §blimit §6: mettre une localisation de limite");
		sender.sendMessage("§c> §6/admin §bsetlocation <name> §6: mettre une localisation à un nom");
		sender.sendMessage("§8§l«§b§l-§8§l»§m----------------------§f§8§l«§b§l-§8§l»§b");*/
		return true;
	}	
}

package fr.xmalware.badblock.hub.commands;

import org.bukkit.Location;
import org.bukkit.command.Command;
import org.bukkit.command.CommandExecutor;
import org.bukkit.command.CommandSender;
import org.bukkit.entity.Player;

import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.utils.i18n.Locale;
import fr.xmalware.badblock.hub.BadBlockHub;
import fr.xmalware.badblock.hub.objects.HubPlayer;
import fr.xmalware.badblock.hub.utils.ConfigUtils;
import fr.xmalware.badblock.hub.utils.Cuboid;

public class AdminCommand implements CommandExecutor {
	
	@Override
	public boolean onCommand(CommandSender sender, Command cmd, String arg, String[] args) {
		if (!(sender instanceof Player)) {
			sender.sendMessage(GameAPI.i18n().get(Locale.ENGLISH_US, "hub.admin.playerneeded"));
			//sender.sendMessage("§7[§bAdmin§7] §cVous devez être un joueur pour pouvoir exécuter cette commande.");
			return true;
		}
		Player player = (Player) sender;
		HubPlayer lobbyPlayer = HubPlayer.get(player);
		if (args.length >= 1 && args[0].equalsIgnoreCase("limit")) {
			if (lobbyPlayer.getLoc1() == null && lobbyPlayer.getLoc2() == null) {
				Location location = player.getLocation();
				location.setY(0);
				lobbyPlayer.setLoc1(location);
				player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.firstlocation"));//"§aPremière localisation OK!");
			}else if (lobbyPlayer.getLoc1() != null && lobbyPlayer.getLoc2() == null) {
				Location location = player.getLocation();
				location.setY(256);
				lobbyPlayer.setLoc2(location);
				player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.secondlocation"));
				//player.sendMessage("§aDeuxième localisation OK!");
				ConfigUtils.saveLocation(BadBlockHub.getInstance(), "limit.loc1", lobbyPlayer.getLoc1());
				ConfigUtils.saveLocation(BadBlockHub.getInstance(), "limit.loc2", lobbyPlayer.getLoc2());
				BadBlockHub.getInstance().setCuboid(new Cuboid(lobbyPlayer.getLoc1(), lobbyPlayer.getLoc2()));
				lobbyPlayer.setLoc1(null);
				lobbyPlayer.setLoc2(null);
			}
			return true;
		}
		if (args.length >= 2 && args[0].equalsIgnoreCase("setlocation")) {
			ConfigUtils.saveLocation(BadBlockHub.getInstance(), args[1], player.getLocation());
			player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.setlocation", args[1]));
			//player.sendMessage("§a'" + args[1] + "' set.");
			return true;
		}
		if (args.length >= 1 && args[0].equalsIgnoreCase("bypass")) {
			if (!lobbyPlayer.isAdmin()) {
				lobbyPlayer.setAdmin(true);
				player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.activated"));
				//player.sendMessage("§7[§bAdmin§7] §aActivé.");
				return true;
			}
			lobbyPlayer.setAdmin(false);
			player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.disabled"));
			//player.sendMessage("§7[§bAdmin§7] §cDésactivé.");
			return true;
		}
		player.sendMessage(GameAPI.i18n().get(lobbyPlayer.getLocale(), "hub.admin.help"));
		/*sender.sendMessage("§8§l«§b§l-§8§l»§m------§f§8§l«§b§l-§8§l»§b §b§lAdmin §8§l«§b§l-§8§l»§m------§f§8§l«§b§l-§8§l»");
		sender.sendMessage("§c> §6/admin §bhelp §6: liste des commandes");
		sender.sendMessage("§c> §6/admin §bbypass §6: activer le mode bypass");
		sender.sendMessage("§c> §6/admin §blimit §6: mettre une localisation de limite");
		sender.sendMessage("§c> §6/admin §bsetlocation <name> §6: mettre une localisation à un nom");
		sender.sendMessage("§8§l«§b§l-§8§l»§m----------------------§f§8§l«§b§l-§8§l»§b");*/
		return true;
	}	
}

package fr.xmalware.badblock.hub.listeners;

import org.bukkit.Bukkit;
import org.bukkit.GameMode;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.player.PlayerJoinEvent;

import fr.badblock.gameapi.events.api.PlayerLoadedEvent;
import fr.badblock.gameapi.players.BadblockPlayer;
import fr.badblock.gameapi.utils.ConfigUtils;
import fr.badblock.gameapi.utils.i18n.TranslatableString;
import fr.badblock.gameapi.utils.threading.TaskManager;
import fr.xmalware.badblock.hub.BadBlockHub;
import fr.xmalware.badblock.hub.inventories.join.PlayerCustomInventory;
import fr.xmalware.badblock.hub.objects.HubPlayer;
import fr.xmalware.badblock.hub.objects.HubScoreboard;
import fr.xmalware.badblock.hub.objects.HubStoredPlayer;

public class PlayerJoinListener extends _HubListener {

	public static void load(BadblockPlayer player, long a) {
		player.inGameData(HubPlayer.class);
		reload(player, a);
	}

	public static void reload(BadblockPlayer player, long a) {
		player.clearInventory();
		player.setMaxHealth(2D);
		player.setHealth(2D);
		player.setWalkSpeed(0.4F);
		player.setGameMode(GameMode.ADVENTURE);
		PlayerCustomInventory.give(player);
		System.out.println("[HUB] Loaded " + player.getName() + " in " + String.format("%.2f", ((System.currentTimeMillis() - a) * 1.0F)) + " ms.");
	}

	@EventHandler
	public void onDataLoad(PlayerLoadedEvent event) {
		TaskManager.runTask(new Runnable() {
			@Override
			public void run() {
				BadblockPlayer player = event.getPlayer();
				if (player == null || !player.isOnline()) return;
				HubPlayer hubPlayer = HubPlayer.get(player);
				hubPlayer.lodad(player);
				HubStoredPlayer hubStoredPlayer = HubStoredPlayer.get(player);
				boolean o = true;
				if (hubStoredPlayer.getMaxLastLocationTime() > System.currentTimeMillis()) {
					if (hubStoredPlayer.getLastLocation() != null) {
						player.teleport(ConfigUtils.convertStringToLocation(hubStoredPlayer.getLastLocation()));
						o = false;
					}
				}
				if (o)
					player.teleport(ConfigUtils.getLocation(BadBlockHub.getInstance(), "worldspawn"));
				hubPlayer.setScoreboard(new HubScoreboard(player));
				if (hubPlayer.getScoreboard() != null)
					hubPlayer.getScoreboard().generate();
				// Broadcast a join message
				if (player.hasPermission("hub.broadcastjoin")) {
					new TranslatableString("hub.joined", player.getGroupPrefix(), player.getName()).broadcast();
				}
				if (hubStoredPlayer.isHidePlayers()) {
					for (Player pl : Bukkit.getOnlinePlayers()) {
						if (pl.hasPermission("hub.bypasshide"))
							continue;
						if (player.inGameData(HubPlayer.class).getFriends().contains(pl.getName()))
							continue;
						if (!player.canSee(pl))
							continue;
						player.hidePlayer(pl);
					}
				}else{
					for (Player pl : Bukkit.getOnlinePlayers()) {
						player.showPlayer(pl);
					}
				}
			}
		});
	}

	/*@EventHandler
	public void onPlayerPermissionLoaded(PlayerPermissionLoadedEvent event) {
		BadblockPlayer player = event.getPlayer();
		HubPlayer hubPlayer = HubPlayer.get(player);
		if (hubPlayer.getScoreboard() != null)
			hubPlayer.getScoreboard().generate();
	}*/

	@EventHandler
	public void onPlayerJoin(PlayerJoinEvent event) {
		long a = System.currentTimeMillis();
		BadBlockHub.getInstance().hubPacketThread.sendPacket();
		event.setJoinMessage(null);

		BadblockPlayer player = (BadblockPlayer) event.getPlayer();

		load(player, a);
	}

}

package fr.xmalware.badblock.hub.listeners;

import java.util.List;
import java.util.Map.Entry;

import org.bukkit.Material;
import org.bukkit.event.EventHandler;
import org.bukkit.event.block.Action;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.ItemStack;

import fr.badblock.gameapi.players.BadblockPlayer;
import fr.xmalware.badblock.hub.inventories.abstracts.actions.ItemAction;
import fr.xmalware.badblock.hub.inventories.abstracts.items.CustomItem;
import fr.xmalware.badblock.hub.inventories.cosmetics.chests.ChestLoader;
import fr.xmalware.badblock.hub.listeners.vipzone.RaceListener;
import fr.xmalware.badblock.hub.objects.HubPlayer;

public class PlayerInteractListener extends _HubListener {

	@EventHandler
	public void onPlayerInteract(PlayerInteractEvent event) {
		BadblockPlayer player = (BadblockPlayer) event.getPlayer();
		Action action = event.getAction();
		HubPlayer lobbyPlayer = HubPlayer.get(player);

		if (!player.hasAdminMode())
			event.setCancelled(true);
		if (event.getClickedBlock() != null) {
			ChestLoader.getInstance().getOpeners().parallelStream().filter(opener -> opener.equals(event.getClickedBlock().getLocation())).forEach(opener -> ChestLoader.getInstance().open(player));
		}
		// Right click on a basic item
		if (player.getItemInHand() == null || player.getItemInHand().getType().equals(Material.AIR))
			return;
		ItemStack itemStack = player.getItemInHand();
		ItemAction itemAction = ItemAction.get(action);
		for (Entry<CustomItem, List<ItemStack>> entry : CustomItem.getItems().entrySet()) {
			if (!(entry.getKey() instanceof CustomItem))
				continue;
			CustomItem customItem = entry.getKey();
			if (itemAction == null)
				continue;
			if (!customItem.getActions().contains(itemAction))
				continue;
			if (!customItem.toItemStack(player).isSimilar(itemStack))
				continue;
			if (lobbyPlayer.hasSpam(player))
				return;
			if (RaceListener.racePlayers.containsKey(player)) {
				player.sendTranslatedMessage("hub.race.youcannotdothatinrace");
				return;
			}
			if (customItem.getNeededPermission() != null && !player.hasPermission(customItem.getNeededPermission())) {
				player.sendMessage(customItem.getErrorNeededPermission());
				return;
			}

			customItem.onClick(player, itemAction, event.getClickedBlock());
		}
	}

}

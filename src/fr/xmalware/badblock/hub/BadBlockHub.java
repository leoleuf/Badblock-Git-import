package fr.xmalware.badblock.hub;

import java.io.File;

import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.entity.Animals;
import org.bukkit.entity.Creature;
import org.bukkit.entity.EntityType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;

import fr.badblock.gameapi.BadblockPlugin;
import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.fakeentities.FakeEntity;
import fr.badblock.gameapi.packets.watchers.WatcherZombie;
import fr.badblock.gameapi.players.BadblockPlayer;
import fr.badblock.gameapi.run.RunType;
import fr.badblock.gameapi.utils.ConfigUtils;
import fr.badblock.gameapi.utils.selections.CuboidSelection;
import fr.badblock.rabbitconnector.RabbitConnector;
import fr.badblock.rabbitconnector.RabbitService;
import fr.xmalware.badblock.hub.commands.AdminCommand;
import fr.xmalware.badblock.hub.commands.LocCommand;
import fr.xmalware.badblock.hub.commands.NPCCommand;
import fr.xmalware.badblock.hub.commands.RaceCommand;
import fr.xmalware.badblock.hub.commands.SpawnCommand;
import fr.xmalware.badblock.hub.effectlib.EffectManager;
import fr.xmalware.badblock.hub.inventories.LinkedInventoryEntity;
import fr.xmalware.badblock.hub.inventories.abstracts.inventories.CustomInventory;
import fr.xmalware.badblock.hub.inventories.cosmetics.chests.ChestLoader;
import fr.xmalware.badblock.hub.inventories.hubchanger.HubChangerInventory;
import fr.xmalware.badblock.hub.inventories.join.PlayerCustomInventory;
import fr.xmalware.badblock.hub.listeners.AsyncPlayerChatListener;
import fr.xmalware.badblock.hub.listeners.CreatureSpawnListener;
import fr.xmalware.badblock.hub.listeners.EntityCombustListener;
import fr.xmalware.badblock.hub.listeners.HubMapProtector;
import fr.xmalware.badblock.hub.listeners.InventoryClickListener;
import fr.xmalware.badblock.hub.listeners.PlayerFakeEntityInteractListener;
import fr.xmalware.badblock.hub.listeners.PlayerInteractListener;
import fr.xmalware.badblock.hub.listeners.PlayerJoinListener;
import fr.xmalware.badblock.hub.listeners.PlayerMoveListener;
import fr.xmalware.badblock.hub.listeners.PlayerQuitListener;
import fr.xmalware.badblock.hub.listeners.battle.Battle;
import fr.xmalware.badblock.hub.listeners.battle.BattleListener;
import fr.xmalware.badblock.hub.listeners.vipzone.RaceListener;
import fr.xmalware.badblock.hub.rabbitmq.HubPacketListener;
import fr.xmalware.badblock.hub.rabbitmq.HubPacketThread;
import fr.xmalware.badblock.hub.rabbitmq.SEntryInfosListener;
import fr.xmalware.badblock.hub.tasks.RequestNPCTask;
import fr.xmalware.badblock.hub.utils.MountManager;
import fr.xmalware.badblock.shoplinker.api.ShopLinkerAPI;
import lombok.Getter;
import lombok.Setter;

@Getter
@Setter
public class BadBlockHub extends BadblockPlugin {

	@Getter
	@Setter
	private static BadBlockHub instance;
	public CuboidSelection cuboid;
	public CuboidSelection vipPushCuboid;
	public CuboidSelection vipPortalCuboid;
	public EffectManager effectManager;
	public Gson gson = GameAPI.getGson();
	public Gson gsonExpose = new GsonBuilder().setPrettyPrinting().excludeFieldsWithoutExposeAnnotation().create();
	public HubPacketThread hubPacketThread;
	public RabbitConnector rabbitConnector;
	public RabbitService rabbitService;
	public ShopLinkerAPI	shopLinkerAPI;
	
	// NPCs
	//private FakeEntity<?> npcxMalware;
	//private FakeEntity<?> npcLeLanN;
	private Location npcxMalwareNormal;
	private Location npcxMalwareTurnBack;
	private Location npcLeLanNNormal;
	private Location npcLeLanNTurnBack;
	private Location battleNpcLocation;
	private CuboidSelection battleArena;
	private EntityType battleNpcEntityType;
	private int battlePlayersLimit;
	private FakeEntity<?> battleNpc;
	
	@Override
	public void onDisable() {
		this.getRabbitService().remove();
	}

	@SuppressWarnings("deprecation")
	@Override
	public void onEnable(RunType runType) {
		long time = System.currentTimeMillis();
		// Singleton
		setInstance(this);
		// Configuration
		this.reloadConfig();
		// Working on fake players
		npcxMalwareNormal = ConfigUtils.getLocation(this, "npc.xmalware.normal");
		npcxMalwareTurnBack = ConfigUtils.getLocation(this, "npc.xmalware.turnback");
		npcLeLanNNormal = ConfigUtils.getLocation(this, "npc.lelann.normal");
		npcLeLanNTurnBack = ConfigUtils.getLocation(this, "npc.lelann.turnback");
		battleNpcLocation = ConfigUtils.getLocation(this, "battle.npc.location");
		battlePlayersLimit = ConfigUtils.get(this, "battle.playerslimit", 5);
		battleArena = new CuboidSelection(ConfigUtils.getBlockLocationFromFile(this, "battle.arena.location1"), ConfigUtils.getBlockLocationFromFile(this, "battle.arena.location2"));
		battleNpcEntityType = EntityType.fromName(ConfigUtils.get(this, "battle.npc.entitytype", EntityType.ZOMBIE.name()));
		Battle.load();
		battleNpc = MountManager.spawn(battleNpcLocation, battleNpcEntityType, WatcherZombie.class, false, false, false, false, GameAPI.i18n().get("hub.battle.npc_displayname")[0]);
		new ChestLoader(this);
		//npcLeLanN = GameAPI.getAPI().spawnFakePlayer(npcLeLanNNormal, new PlayerInfo(UUID.fromString("443fbe17-448c-4acd-bbed-2673652f18fc"), "LeLanN", new PropertyMap(), GameMode.ADVENTURE, 0, "LeLanN"));
		//npcxMalware = GameAPI.getAPI().spawnFakePlayer(npcxMalwareNormal, new PlayerInfo(UUID.fromString("89a1ccaf-baf0-4b4c-9cc0-d4e40f9b02aa"), "xMalware", new PropertyMap(), GameMode.ADVENTURE, 0, "xMalware"));
		// Mounts
		new MountManager();
		// Effects
		effectManager = new EffectManager(this);
		// Tasks
		new RequestNPCTask();
		// Player items
		PlayerCustomInventory.load();
		// Rabbit
		this.setRabbitConnector(RabbitConnector.getInstance());
		this.setRabbitService(this.getRabbitConnector().getService("default"));
		this.setShopLinkerAPI(new ShopLinkerAPI(this.getRabbitService()));
		this.setHubPacketThread(new HubPacketThread(this.getRabbitService()));
		// Hub changer
		CustomInventory.get(HubChangerInventory.class);
		new HubPacketListener();
		// SEntry
		new SEntryInfosListener();
		// Inventories interactions by fake-entities
		LinkedInventoryEntity.load();
		// Limit
		Location loc1 = ConfigUtils.getLocation(this, "limit.loc1");
		Location loc2 = ConfigUtils.getLocation(this, "limit.loc2");
		if (loc1 != null && loc2 != null) {
			loc1.setY(0);
			loc2.setY(256);
			this.setCuboid(new CuboidSelection(loc1, loc2));
		}
		// VIP Portal
		Location defaultLocation = new Location(Bukkit.getWorld("world"), 0, 0, 0);
		loc1 = ConfigUtils.getBlockLocationFromFile(this, "viplimit.portal.loc1");
		if (loc1 == null) {
			ConfigUtils.saveLocation(this, "viplimit.portal.loc1", defaultLocation);
			loc1 = defaultLocation;
		}
		loc2 = ConfigUtils.getBlockLocationFromFile(this, "viplimit.portal.loc2");
		if (loc2 == null) {
			ConfigUtils.saveLocation(this, "viplimit.portal.loc2", defaultLocation);
			loc2 = defaultLocation;
		}
		this.setVipPortalCuboid(new CuboidSelection(loc1, loc2));
		// VIP Push
		loc1 = ConfigUtils.getBlockLocationFromFile(this, "viplimit.push.loc1");
		if (loc1 == null) {
			ConfigUtils.saveLocation(this, "viplimit.push.loc1", defaultLocation);
			loc1 = defaultLocation;
		}
		loc2 = ConfigUtils.getBlockLocationFromFile(this, "viplimit.push.loc2");
		if (loc2 == null) {
			ConfigUtils.saveLocation(this, "viplimit.push.loc2", defaultLocation);
			loc2 = defaultLocation;
		}
		this.setVipPushCuboid(new CuboidSelection(loc1, loc2));
		// Commands
		new NPCCommand();
		new AdminCommand();
		new SpawnCommand();
		new LocCommand();
		new RaceCommand();
		// Reload configuration
		this.reloadConfig();
		// World manage
		Bukkit.getWorlds().forEach(world -> {
			world.getEntitiesByClasses(Animals.class, Creature.class).forEach(entity -> entity.remove());
			world.setFullTime(0);
			world.setPVP(false);
			world.setStorm(false);
			world.setThunderDuration(0);
			world.setThundering(false);
			world.setWeatherDuration(0);
			world.setTime(0);
		});

		// API compatibility
		getAPI().formatChat(true, false, "hub");
		getAPI().getBadblockScoreboard().doGroupsPrefix();
		getAPI().setMapProtector(new HubMapProtector());
		getAPI().managePortals(new File(getDataFolder(), "portals"));

		// Registering all events
		new AsyncPlayerChatListener();
		new CreatureSpawnListener();
		new EntityCombustListener();
		new InventoryClickListener();
		new PlayerInteractListener();
		new PlayerJoinListener();
		new PlayerMoveListener();
		new PlayerQuitListener();
		new PlayerFakeEntityInteractListener();
		new RaceListener(this);
		new BattleListener();

		// Reload players
		Bukkit.getOnlinePlayers().forEach(player -> PlayerJoinListener.load((BadblockPlayer) player, null));
		System.out.println("[HUB] Loaded BadBlockHub in " + String.format("%.2f", ((System.currentTimeMillis() - time) * 1.0F)) + " ms.");
	}

}

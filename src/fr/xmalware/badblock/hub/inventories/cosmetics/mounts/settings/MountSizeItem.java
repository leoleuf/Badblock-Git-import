
package fr.xmalware.badblock.hub.inventories.cosmetics.mounts.settings;

import org.bukkit.Material;

import fr.badblock.gameapi.players.BadblockPlayer;
import fr.xmalware.badblock.hub.inventories.abstracts.actions.ItemAction;
import fr.xmalware.badblock.hub.inventories.abstracts.inventories.CustomInventory;
import fr.xmalware.badblock.hub.inventories.cosmetics.mounts.defaults.MountItem;
import fr.xmalware.badblock.hub.inventories.cosmetics.mounts.settings.defaults.MountConfig;
import fr.xmalware.badblock.hub.inventories.cosmetics.mounts.settings.defaults.MountConfiguratorItem;
import fr.xmalware.badblock.hub.inventories.cosmetics.mounts.settings.defaults.MountSettingsInventory;
import fr.xmalware.badblock.hub.objects.HubPlayer;

public class MountSizeItem extends MountConfiguratorItem {

	public MountSizeItem() {
		super("sizemode", Material.GHAST_TEAR, (byte) 0);
	}

	@Override
	public String getStateKey(MountConfig mountConfig) {
		return mountConfig.isBaby() ? "hub.mounts.baby" : "hub.mounts.adult";
	}

	@Override
	public boolean isCompatible(MountItem mountItem) {
		return mountItem.hasResizableMode();
	}

	@Override
	public void use(BadblockPlayer player, ItemAction itemAction, MountConfig mountConfig) {
		HubPlayer hubPlayer = HubPlayer.get(player);
		if (mountConfig.isBaby()) {
			mountConfig.setBaby(false);
			if (hubPlayer.mountEntity != null && hubPlayer.mountEntity.isValid()) {
				hubPlayer.mountEntity.teleport(player);
				hubPlayer.mountEntity.setPassenger(player);
			}
			player.sendTranslatedMessage("hub.mounts.nowanadult");
			CustomInventory.get(MountSettingsInventory.class).open(player);
			return;
		}
		mountConfig.setBaby(true);
		if (hubPlayer.mountEntity != null && hubPlayer.mountEntity.isValid()) {
			if (player.isInsideVehicle())
				player.getVehicle().eject();
		}
		player.sendTranslatedMessage("hub.mounts.nowababy");
		CustomInventory.get(MountSettingsInventory.class).open(player);
	}

}

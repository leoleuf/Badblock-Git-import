
package fr.xmalware.badblock.hub.inventories.cosmetics.mounts;

import java.util.Arrays;
import java.util.List;

import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.inventory.ItemStack;

import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.players.BadblockPlayer;
import fr.xmalware.badblock.hub.inventories.ItemAction;
import fr.xmalware.badblock.hub.inventories.abstracts.CustomInventory;
import fr.xmalware.badblock.hub.inventories.abstracts.CustomItem;
import fr.xmalware.badblock.hub.objects.HubStoredPlayer;
import lombok.Getter;
import lombok.Setter;

@Getter @Setter public abstract class MountItem extends CustomItem {

	private String mountName;

	public MountItem(String mountName, Material material, byte data) {
		super("hub.items.mounts." + mountName + ".displayname", material, data, "hub.items.mount." + mountName + ".lore");
		this.setMountName(mountName);
	}
	public abstract void mount(BadblockPlayer player);


	@Override
	public void onClick(BadblockPlayer player, ItemAction itemAction, Block clickedBlock) {
		HubStoredPlayer hubStoredPlayer = HubStoredPlayer.get(player);
		// Buy system
		if (itemAction.equals(ItemAction.INVENTORY_RIGHT_CLICK)) {
			if (has(player)) {
				player.sendTranslatedMessage("hub.mounts.alreadyowned");
				return;
			}
			if (hasPermission()) {
				player.sendTranslatedMessage("hub.mounts." + this.getMountName() + ".nopermission");
				return;
			}
			int badcoins = player.getPlayerData().getBadcoins();
			if (badcoins < getNeededBadcoins()) {
				player.sendTranslatedMessage("hub.mounts.notenoughbadcoins", getNeededBadcoins() - badcoins);
				return;
			}
			player.getPlayerData().removeBadcoins(badcoins);
			hubStoredPlayer.getMounts().add(this.getMountName());
			player.sendTranslatedMessage("hub.mounts." + this.getMountName() + ".bought");
			CustomInventory.get(MountsInventory.class).open(player);
			return;
		}
		// Use system
		if (!has(player)) {
			if (hasPermission()) player.sendTranslatedMessage("hub.mounts." + this.getMountName() + ".nopermission");
			else player.sendTranslatedMessage("hub.mounts.unowned");
			return;
		}
		this.mount(player);
		player.sendTranslatedMessage("hub.mounts." + this.getMountName() + ".mounted");
	}

	@Override
	public ItemStack toItemStack(BadblockPlayer player) {
		String ownedKey = has(player) ? "hub.mounts.owned" : "hub.mounts.unowned";
		return build(Material.SKULL_ITEM, 1, (byte)3, GameAPI.i18n().get(this.getName())[0], GameAPI.i18n().get(this.getLore(), GameAPI.i18n().get(ownedKey), getNeededBadcoins()));
	}
	
	@Override
	public List<ItemAction> getActions() {
		return Arrays.asList(ItemAction.INVENTORY_DROP, ItemAction.INVENTORY_LEFT_CLICK, ItemAction.INVENTORY_RIGHT_CLICK, ItemAction.INVENTORY_WHEEL_CLICK);
	}
	
	public boolean has(BadblockPlayer player) {
		return hasPermission() ? player.hasPermission("hub.mounts." + this.getMountName()) : HubStoredPlayer.get(player).getMounts().contains(this.getMountName());
	}

	public boolean hasPermission() {
		return false;
	}

	public int getNeededBadcoins() {
		return 0;
	}

}

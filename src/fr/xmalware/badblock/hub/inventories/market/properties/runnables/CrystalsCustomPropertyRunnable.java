package fr.xmalware.badblock.hub.inventories.market.properties.runnables;

import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;

import com.google.gson.JsonObject;

import fr.badblock.game.core18R3.players.data.GamePlayerData;
import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.players.BadblockPlayer;
import fr.badblock.gameapi.players.data.PlayerData;
import fr.badblock.gameapi.utils.ConfigUtils;
import fr.badblock.gameapi.utils.general.Callback;
import fr.xmalware.badblock.hub.BadBlockHub;
import fr.xmalware.badblock.hub.inventories.market.properties.CustomPropertyRunnable;

public class CrystalsCustomPropertyRunnable extends CustomPropertyRunnable {

	@Override
	public void work(String player, String ownItem) {
		int result = Integer.parseInt(ownItem);
		GameAPI.getAPI().getLadderDatabase().getPlayerData(player, new Callback<JsonObject>() {

			@Override
			public void done(JsonObject object, Throwable error) {
				JsonObject game = object.get("game").getAsJsonObject();
				PlayerData playerData = GameAPI.getGson().fromJson(game, PlayerData.class);
				GamePlayerData gamePlayerData = (GamePlayerData) playerData;
				gamePlayerData.setData(game);
				gamePlayerData.addShopPoints(result);
				GameAPI.getAPI().getLadderDatabase().updatePlayerData(player, game);
			}

		});
	}

	@Override
	public String getCustomI18n(BadblockPlayer player, String ownItem) {
		return ownItem;
	}

	@Override
	public ItemStack getItemStack(BadblockPlayer player, String ownItem) {
		return new ItemStack(Material.getMaterial(ConfigUtils.get(BadBlockHub.getInstance(), "chests.winitem.crystals.type", Material.EMERALD.name())), ConfigUtils.getInt(BadBlockHub.getInstance(), "chests.crystals.xp.amount"), (byte) ConfigUtils.getInt(BadBlockHub.getInstance(), "chests.winitem.crystals.data"));
	}
	
}

package fr.xmalware.badblock.hub.inventories.market.properties.runnables;

import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;

import com.google.gson.JsonObject;

import fr.badblock.game.core18R3.players.data.GamePlayerData;
import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.players.BadblockPlayer;
import fr.badblock.gameapi.players.data.PlayerData;
import fr.badblock.gameapi.players.data.boosters.Booster;
import fr.badblock.gameapi.players.data.boosters.PlayerBooster;
import fr.badblock.gameapi.utils.ConfigUtils;
import fr.badblock.gameapi.utils.general.Callback;
import fr.xmalware.badblock.hub.BadBlockHub;
import fr.xmalware.badblock.hub.inventories.market.properties.CustomPropertyRunnable;

public class BoosterCustomPropertyRunnable extends CustomPropertyRunnable {

	@Override
	public void work(String player, String ownItem) {
		int id = Integer.parseInt(ownItem);
		BadBlockHub instance = BadBlockHub.getInstance();
		GameAPI.getAPI().getLadderDatabase().getPlayerData(player, new Callback<JsonObject>() {

			@Override
			public void done(JsonObject object, Throwable error) {
				JsonObject game = object.get("game").getAsJsonObject();
				PlayerData playerData = GameAPI.getGson().fromJson(game, GamePlayerData.class);
				GamePlayerData gamePlayerData = (GamePlayerData) playerData;
				gamePlayerData.setData(game);
				Booster booster = new Booster(id, ConfigUtils.getInt(instance, "booster.data." + id + ".multipliers.badcoins"), ConfigUtils.getInt(instance, "booster.data." + id + ".multipliers.xp"), (ConfigUtils.getInt(instance, "booster.data." + id + ".effectiveTime") * 1000L));
				PlayerBooster playerBooster = new PlayerBooster(-1, false, booster);
				gamePlayerData.getBoosters().add(playerBooster);
				GameAPI.getAPI().getLadderDatabase().updatePlayerData(player, game);
			}

		});
	}
	
	@Override
	public String getCustomI18n(BadblockPlayer player, String ownItem) {
		return player.getTranslatedMessage("hub.boosters." + ownItem + ".name")[0];
	}

	@Override
	public ItemStack getItemStack(BadblockPlayer player, String ownItem) {
		return new ItemStack(Material.getMaterial(ConfigUtils.get(BadBlockHub.getInstance(), "booster.data." + ownItem + ".item.material", Material.GOLD_INGOT.name())), ConfigUtils.getInt(BadBlockHub.getInstance(), "booster.data." + ownItem + ".item.amount"), (byte) ConfigUtils.getInt(BadBlockHub.getInstance(), "booster.data." + ownItem + ".item.data"));
	}
	
}

package fr.xmalware.badblock.hub.inventories.hubchanger;

import java.util.ArrayList;
import java.util.List;
import java.util.Map.Entry;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.DyeColor;
import org.bukkit.Material;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.ItemMeta;

import fr.xmalware.badblock.hub.BadBlockHub;
import fr.xmalware.badblock.hub.inventories.abstracts.CustomUniqueInventory;
import fr.xmalware.badblock.hub.rabbit.Hub;

public class HubChangerInventory extends CustomUniqueInventory {
	
	private HubChangerBackItem	backItem;
	
	public HubChangerInventory() {
		super("§6Changer de hub", 1);
		backItem = new HubChangerBackItem();
		this.setItem(1, backItem);
	}

	public void update() {
		Bukkit.getScheduler().runTask(BadBlockHub.getInstance(), new Runnable() {
			@Override
			public void run() {
				ArrayList<Hub> choosedHubs = new ArrayList<>();
				Hub.getHubs().parallelStream().filter(hub -> hub.isOnline()).forEach(hub -> choosedHubs.add(hub));
				int linesNeeded = 1 + ((choosedHubs.size() + 2) / 9);
				setLines(linesNeeded);
				inventory = Bukkit.createInventory(null, getLines() * 9, getName());
				int id = -1;
				for (Hub hub : choosedHubs) {
					id++;
					Material material = Material.REDSTONE_BLOCK;
					byte data = 0;
					int amount = 1;
					ChatColor chatColor = ChatColor.DARK_RED;
					if (hub.isOnline()) {
						material = Material.WOOL;
						int percent = (hub.getPlayers() / hub.getSlots()) * 100;
						if (hub.getPlayers() >= hub.getSlots()) {
							data = DyeColor.MAGENTA.getWoolData();
							chatColor = ChatColor.DARK_PURPLE;
						}
						else if (percent >= 90) {
							data = DyeColor.RED.getWoolData();
							chatColor = ChatColor.RED;
						}
						else if (percent >= 80) {
							data = DyeColor.ORANGE.getWoolData();
							chatColor = ChatColor.GOLD;
						}
						else if (percent >= 60) {
							data = DyeColor.BLUE.getWoolData();
							chatColor = ChatColor.BLUE;
						}
						else if (percent >= 50) {
							data = DyeColor.CYAN.getWoolData();
							chatColor = ChatColor.AQUA;
						}
						else if (percent >= 30) {
							data = DyeColor.GREEN.getWoolData();
							chatColor = ChatColor.DARK_GREEN;
						}
						else {
							data = DyeColor.LIME.getWoolData();
							chatColor = ChatColor.GREEN;
						}
						amount = hub.getId() >= 64 ? 64 : hub.getId();
					}
					ItemStack itemStack = new ItemStack(material, amount, data);
					ItemMeta itemMeta = itemStack.getItemMeta();
					itemMeta.setDisplayName(chatColor + "Hub n°" + hub.getId());
					List<String> lore = new ArrayList<>();
					lore.add("");
					lore.add("§7Connectés: §b" + hub.getPlayers() + "/" + hub.getSlots());
					if (hub.getRanks() != null && !hub.getRanks().isEmpty()) {
						lore.add("");
						for (Entry<String, Integer> entry : hub.getRanks().entrySet())
							lore.add(entry.getKey() + "§f» §7" + entry.getValue());
					}
					itemMeta.setLore(lore);
					itemStack.setItemMeta(itemMeta);
					hub.setItemStack(itemStack);
					inventory.setItem(id, itemStack);
				}
				inventory.setItem((getLines() * 9) - 1, backItem.getStaticItem());
			}
		});
	}
	
}

package fr.xmalware.badblock.hub.objects;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import java.util.Random;
import java.util.UUID;

import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.scoreboard.Team;

import fr.badblock.gameapi.GameAPI;
import fr.badblock.gameapi.players.BadblockPlayer;
import fr.badblock.gameapi.players.data.InGameData;
import fr.badblock.gameapi.utils.general.Callback;
import fr.xmalware.badblock.hub.BadBlockHub;
import lombok.Getter;
import lombok.Setter;
import net.minecraft.server.v1_8_R3.Entity;

@Getter @Setter public class HubPlayer implements InGameData {
	// Basic informations
	private UUID					   		  uuid;
	private List<String>					  friends;
	public Map<String, Team> 				  teams   		= new HashMap<>();

	// AntiUseSpam
	private	long							  antiSpamClicked;
	private	long							  bigAntiSpamClicked;

	// Mount
	public Entity	 						  mountEntity;
	public long		 						  lastMount;
	public long		 						  teleportMount;

	public static int a;

	static {
		Bukkit.getScheduler().runTaskTimer(BadBlockHub.getInstance(), new Runnable() {
			@Override
			public void run() {
				GameAPI.getAPI().getLadderDatabase().sendPing(new String[]{"*"}, new Callback<Integer>() {
					@Override
					public void done(Integer arg0, Throwable arg1) {
						a = arg0;
					}
				});
			}
		}, 0, 5);
	}

	public HubPlayer() {
		this.setFriends(new ArrayList<>());
	}
	
	public void load(BadblockPlayer player){
		Bukkit.getScheduler().runTaskTimer(BadBlockHub.getInstance(), new Runnable() {
			@Override
			public void run() {
				player.setFireTicks(0);
				BadblockPlayer bbPlayer = (BadblockPlayer) player;
				List<String> strings = Arrays.asList(GameAPI.i18n().get(bbPlayer.getPlayerData().getLocale(), "hub.actionbar"));
				String o = strings.get(new Random().nextInt(strings.size()));
				bbPlayer.sendActionBar(o);
				String finalString = "";
				Iterator<String> iterator = Arrays.asList(GameAPI.i18n().get(bbPlayer.getPlayerData().getLocale(), "hub.tablist.header")).iterator();
				while (iterator.hasNext()) {
					finalString += iterator.next() + (iterator.hasNext() ? System.lineSeparator() : "");
				}
				String finalString2 = "";
				iterator = Arrays.asList(GameAPI.i18n().get(bbPlayer.getPlayerData().getLocale(), "hub.tablist.footer")).iterator();
				while (iterator.hasNext()) {
					finalString2 += iterator.next() + (iterator.hasNext() ? System.lineSeparator() : "");
				}
				bbPlayer.sendTabHeader(finalString.replace("%0", Integer.toString(a)), finalString2.replace("%0", Integer.toString(a)));
			}
		}, 0, 5);
	}

	public void use() {
		long time = System.currentTimeMillis();
		this.setAntiSpamClicked(time + 500);
		this.setBigAntiSpamClicked(time + 200);
	}

	public boolean hasSpam(BadblockPlayer player) {
		long time = System.currentTimeMillis();
		if (this.getBigAntiSpamClicked() >= time) return true;
		if (this.getAntiSpamClicked() >= time) {
			player.sendTranslatedMessage("hub.spam.waitbetweeneachinteraction");

			this.setBigAntiSpamClicked(time + 200);
			return true;
		}
		use();
		return false;
	}

	public static HubPlayer get(BadblockPlayer player) {
		return player.inGameData(HubPlayer.class);
	}
	
	public static HubPlayer get(Player player){
		return get((BadblockPlayer) player);
	}

}
